{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"article","attributes":{},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"완전-검색---exhaustive-search"},"children":["완전 검색 - Exhaustive Search"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Brute-force, generate-and-test"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["문제의 해법으로 생각할 수 있는 모든 경우의 수를 나열, 확인하는 기법"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["경우의 수가 상대적으로 작을 때 유용"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["자격검정평가 등에서는 우선 완전검색으로 해답 도출 후, 성능 개선을 위해 다른 알고리즘 사용 및 확인하는 것이 바람직함"]}]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"순열---permutation"},"children":["순열 - Permutation"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":["서로 다른 것들 중 일부 추출해 한 줄로 나열하는 것"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["서로 다른 n개 중 r개 택하는 순열은  nPr로 표현"]}]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"python"},"children":["# {1,2,3} 포함하는 모든 순열 생성\n## 각 자릿수별 loop 사용\nfor i1 in range(1, 4):\n    for i2 in range(1, 4):\n        if i2 != i1:\n            for i3 in range(1,4):\n                if i3 != i1 and i3 != i2:\n                    print(i1, i2, i3)\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"탐욕-알고리즘---greedy-algorithm"},"children":["탐욕 알고리즘 - Greedy Algorithm"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":["여러 경우 중 하나를 결정해야 할 때마다 그 순간에 최적이라고 생각되는 것을 선택해 나가는 방식으로 진행해 해답 도출"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["각 선택 시점에서 이뤄지는 결정은 지역적으로 최적이나, 최종적인 해답이 최적이라는 보장은 없음"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["동작과정",{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":["해 선택 : 현상태에서 부분 문제의 최적해를 구한 뒤, 이를 부분해집합 Solution Set에 추가"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["실행 가능성 검사 : 새로운 부분해 집합의 실행 가능여부 확인 (문제의 제약 조건 위반 여부 확인)"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["해 검사 : 새로운 부분해 집합의 해답 부합 여부 확인"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["해답 아닌 경우 반복"]}]}]}]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"python"},"children":["# baby-gin\nnum = 456789\nc = [0] * 12\n\n# 각 자릿수를 배열에 저장\nfor i in range(6):\n    c[num % 10] += 1\n    num //= 10\n    \ni = 0\ntri = run = 0\nwhile i < 10:\n    if c[i] >= 3:\t# triplet 조사 후 데이터 삭제\n        c[i] -= 3\n        tri += 1\n        continue;\n    if c[i] >= 1 and c[i+1] >= 1 and c[i+2] >= 1:\t# run 조사 후 데이터 삭제\n        c[i] -= 1\n        c[i+1] -= 1\n        c[i+2] -= 1\n        run += 1\n        continue\n    i += 1\n    \nif run + tri == 2: print('Baby Gin')\nelse: print('Lose')\n"]}]},"frontmatter":{"title":"완전검색, 탐욕법","tags":"알고리즘"},"file":{"path":"/docs/210815-exhaustive-greedy.md"}}},"__N_SSG":true}