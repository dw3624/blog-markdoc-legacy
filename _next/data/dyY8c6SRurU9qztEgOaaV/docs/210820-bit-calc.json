{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"article","attributes":{},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":1,"id":"비트-연산자"},"children":["비트 연산자"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"비트-연산자"},"children":["비트 연산자"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["&"]}," : 비트 단위로 AND 연산"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["|"]}," : 비트 단위로 OR 연산"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["<<"]}," : 피연산자의 비트열을 왼쪽으로 이동"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":[">>"]}," : 피연산자의 비트열을 오른쪽으로 이동"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["1<<n"]}," :",{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":["왼쪽 1을 2진수로 취급하고 n번 왼쪽으로 shift"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["원소가 n개일 경우의 모든 부분집합의 수 (",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["2**n"]}," 과 동일)"]}]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["i & (1<<j)"]}," : i의 j번째 비트가 1인지 아닌지 반환"]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"비트-연산자를-이용한-부분집합-생성"},"children":["비트 연산자를 이용한 부분집합 생성"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"python"},"children":["arr = [1,2,3]\nn = len(arr)\n\nfor i in range(1<<n):\n    for j in range(n):\n        if i & (1<<j):\n            print(arr[j], end = ', ')\n        # print()\n    print()\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"원리"},"children":["원리"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":["2진법 : ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["0"]},"과 ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["1"]},"을 이용해 숫자를 나타내는 방식"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["1은 원소가 포함된 경우, 0은 원소가 포함되지 않은 경우로 간주",{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["[1,2,3]"]},"에서 1, 2를 포함하는 부분집합 --> ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["[0,1,1]"]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["2진법은 셋째, 둘째, 첫째자리 순으로 이뤄짐"]}]}]}]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"python"},"children":["# 2진법으로 변환된 부분집합\n1\t\t# 001\n2\t\t# 010\n3\t\t# 100\n12\t\t# 011\n23\t\t# 110\n13\t\t# 101\n123\t\t# 111\n"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":["모든 부분집합을 2진법으로 나타낸 후, 각 원소값을 알기 위해서는 기존에 주어진 숫자 리스트의 인덱스를 알아야 함"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["각 부분집합의 요소들과 AND(교집합)가 성립하는 인덱스 번호를 알아낸다"]}]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"python"},"children":["index 0\t\t# 001\nindex 1\t\t# 010\nindex 2\t\t# 100\n\n# 부분집합이 011인 경우, index 0과 index 1이 겹친다\n"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":["교집합이 성립하는 인덱스 번호의 요소를 출력하면 부분집합을 구할 수 있음"]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"해석"},"children":["해석"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"1"},"children":["1"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"python"},"children":["for i in range(1<<n):\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":""},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["1<<n"]}]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":["왼쪽의 1을 2진수로 취급, n번 왼쪽으로 shift"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["1<<3"]},"의 경우, 2진수 100을 반환"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["2**n"]}," 값과 같으며, 부분집합의 총 개수를 반환"]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"2"},"children":["2"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"python"},"children":["for j in range(n):\n"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["0 ~ n-1"]},"은 길이가 n인 리스트의 인덱스가 됨"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["n = 3"]},"의 경우, 인덱스값 ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["0, 1, 2"]},"를 반환"]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":3,"id":"3"},"children":["3"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"python"},"children":["if i & (1<<j):\n    print(arr[j], end = ', ')\n"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["i"]}," : 찾으려는 부분집합 (0과 1로 이루어진 리스트 형태)"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["j"]}," : 리스트의 인덱스 번호"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["찾으려는 부분집합과 현재 인덱스 번호 사이에 교집합이 있는 경우, 원본 리스트에서 해당 인덱스 요소를 출력"]}]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"python"},"children":["# i = 3의 경우\n## 3 = 011이기 때문에 0,1번째 인덱스를 가진 1,2가 부분집합으로 나와야 함\n3 & 1<<0\t# 011 & 001 = 1\n3 & 1<<1\t# 011 & 010 = 10\n3 & 1<<2\t# 011 & 100 = 0\n"]}]},"frontmatter":{"title":"비트 연산자","tags":"알고리즘"},"file":{"path":"/docs/210820-bit-calc.md"}}},"__N_SSG":true}