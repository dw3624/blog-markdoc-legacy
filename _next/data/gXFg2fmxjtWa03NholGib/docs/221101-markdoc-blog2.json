{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"article","attributes":{},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"개요"},"children":["개요"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["지난번엔 기본적인 세팅 후 메인페이지를 만들었습니다."," ","이번에는 게시물 목록 페이지를 만들어 보겠습니다."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["게시물 마크다운 파일은 ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["pages/docs"]}," 디렉토리에 추가합니다."," ","docs의 index 페이지는 해당 폴더 안에 index.md와 같이 작성할 수 있습니다."," ","다만 게시물 개수가 많아지면 index 파일을 찾기 어려워지므로 이번에는 ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["pages"]}," 디렉토리에 바로 ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["docs.js"]},"를 만드는 방식으로 진행합니다."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"게시물-목록-불러오기"},"children":["게시물 목록 불러오기"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["gray-matter"]},"를 추가로 설치해 docs 폴더 내 파일 정보를 불러옵니다."," ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["lib/item.js"]},"에 해당 내용을 작성합니다."]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"javascript"},"children":["import fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\n\nconst directory = path.join(process.cwd(), 'pages/docs')\n\nexport async function getStaticProps() {\n  const allPostData = getSortedItems()\n  return {\n    props: {\n      allPostData\n    }\n  }\n}\n\nexport function getSortedItems() {\n  const fileNames = fs.readdirSync(directory)\n  const allItemsData = fileNames.map((fileName) => {\n    const id = fileName.replace(/\\.md$/, '')\n    const fullPath = path.join(directory, fileName);\n    const fileContents = fs.readFileSync(fullPath, 'utf8');\n    const matterResult = matter(fileContents);\n    return {\n      id,\n      ...matterResult.data,\n    };\n  });\n  // id 기준으로 재배열\n  return allItemsData.sort(({ id: a }, { id: b }) => {\n    if (a < b) {\n      return 1;\n    } else if (a > b) {\n      return -1;\n    } else {\n      return 0;\n    }\n  })\n}\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"목록-페이지-작성"},"children":["목록 페이지 작성"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["위에서 만든 sortedItems를 가져와 ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["docs.js"]},"에서 목록으로 보여줍니다."," ","일단은 10개만 보여주도록 만들어봅니다."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":""},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["docs.js"]}]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"javascript"},"children":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getSortedItems } from '../lib/items';\nimport ArticleIndex from '../components/article/index';\n\nexport async function getStaticProps() {\n  const sortedItems = getSortedItems()\n  return {\n    props: {\n      sortedItems\n    }\n  }\n}\n\nconst Docs = ({ sortedItems }) => {\n  let limit = 10\n  const [offset, setOffset] = useState()\n\n  if (typeof offset === 'undefined' || typeof window === 'undefined') {\n    return null\n  }\n  return (\n    <>\n      <ArticleIndex sortedItems={sortedItems.slice(offset, offset + limit)}/>\n    </>\n  );\n};\n\nexport default Docs;\n\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":""},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["article/index.js"]}]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"javascript"},"children":["import Article from './article';\nimport styled from 'styled-components';\n\nconst ArticleIndex = ({ sortedItems }) => {\n  return (\n    <StyledUl>\n      {sortedItems.map(({ id, date, title, desc, tags }, idx) => {\n        return (\n          <div key={id}>\n            <StyledLi>\n              <Article\n                id={id}\n                date={date}\n                title={title}\n                desc={desc}\n                tags={tags}\n              />\n            </StyledLi>\n            <Separator/>\n          </div>\n        )\n      })}\n    </StyledUl>\n  );\n};\n\nexport default ArticleIndex;\n\nconst StyledUl = styled.ul`\n  padding-left: 0;\n`\nconst StyledLi = styled.li`\n  list-style-type: none;\n  margin: 1.5rem 0 1.5rem;\n`\nconst Separator = styled.div`\n  border-bottom: 1px solid var(--gray-medium);\n  line-height: 0.1em;\n`\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":""},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["article/article.js"]}]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"javascript"},"children":["import Link from \"next/link\";\nimport TagIndex from \"../tag\";\nimport styled from \"styled-components\";\nimport { theme } from './../../styles/theme';\n\nconst Article = ({ id, date, title, desc, tags }) => {\n  return (\n    <>\n      <Row>\n        <Link href={`/docs/${id}`}>\n          <a style={{textDecoration: 'none'}}><Title>{title}</Title></a>\n        </Link>\n        {desc? <Desc>{desc}</Desc>: null}\n        {tags? <TagIndex tags={tags}/>: null}\n        {date? <Date>{date}</Date>: null}\n      </Row>\n    </>\n  );\n};\n\nexport default Article;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`\nconst Title = styled.span`\n  color: black;\n  font-size: var(--font-size-5);\n  font-weight: 600;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`\nconst Desc = styled.div`\n`\nconst ReadMore = styled.a`\n  text-decoration: none;\n  color: ${theme.colors.accent};\n  font-size: ${theme.fontSize.sub}px;\n  font-weight: 800;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`\nconst Date = styled.div`\n  padding-left: 0.2rem;\n  color: gray;\n  font-size: var(--font-size-2);\n  font-weight: 600;\n`\n"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"메인페이지-수정"},"children":["메인페이지 수정"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["url이 docs로 바뀌었을때 해당 페이지가 뜨도록 ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["app.js"]},"를 변경합니다."]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":4,"id":""},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["_app.js"]}]},{"$$mdtype":"Tag","name":"Fence","attributes":{"data-language":"javascript"},"children":["...\nfunction MyApp({ Component, pageProps }) {\n  ...\n  const isList = router.asPath.endsWith('/docs') || router.asPath.startsWith('/docs#');\n  const isDocs = router.asPath.startsWith('/docs/');\n\n  return (\n    <>\n      ...\n        <WrapPage>\n          {isList? (\n            <WrapDoc>\n              <Doc>\n                <Component {...pageProps} />\n              </Doc>\n            </WrapDoc>\n          ): (\n            <WrapMain isLanding={isLanding}>\n              <Main isDocs={isDocs}>\n                <Component {...pageProps} />\n              </Main>\n            </WrapMain>\n          )}\n        </WrapPage>\n      ...\n    </>\n  )\n}\n...\n"]}]},"frontmatter":{"title":"마크다운 블로그 만들어보기 2","tags":"Next.js  Markdoc"},"file":{"path":"/docs/221101-markdoc-blog2.md"}}},"__N_SSG":true}